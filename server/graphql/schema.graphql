 type Query {
    getLibrary: [Library]
    getDataByParametr(parametr: [String]!): [DataParametrs]
    getTree: [Library]
}
type Mutation {
    createNewNote(data: [libraryInput]!): [Library]
    updateNote(data: [libraryInput]!): [Library]
    deleteNote(data: [Int]!): [Library]
    changeTree(tree: treeInput!): Library
}
type Library {
    id: ID!
    data: [String!]
    labels: [String]
    name: String
    val1: Value
    val2: Value
    link: String
    children:[Library]
}
type Value {
    value: Int!
    label: String!
}
type DataParametrs {
    id: String!
    data: [String]
    labels: [String]
} 
input libraryInput {
    id: ID!
    data: [Int!]
    name:String
    val1: valueInput
    val2: valueInput
    labels: [String]
    children: [libraryInput]
    link: String
}
input valueInput {
    value: Int!
    label: String!
}
input treeInput {
    children: [libraryInput]
    data: [Int]
    id: ID!
    name: String
}